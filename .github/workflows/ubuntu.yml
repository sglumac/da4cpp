name: Ubuntu

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      branch:
        required: false
        default: master

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: clang-format
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: '18'
          check-path: 'src'

      - name: update
        run: sudo apt-get update

      - name: install cmake-format
        run: sudo apt-get install cmake-format

      - name: cmake-lint
        run: (echo "CMakeLists.txt"; find src -name "*.cmake" -o -name "CMakeLists.txt") | xargs cmake-lint

      - name: install Clang
        run: sudo apt-get install -y clang-16 llvm-16-dev libclang-16-dev

      - name: install catch2
        run: sudo apt-get install -y catch2

      - name: install gcovr
        run: sudo apt-get install -y gcovr

      - name: install graphviz
        run: sudo apt-get install -y graphviz

      - name: install doxygen
        run: sudo apt-get install -y doxygen

      - name: configure
        run: cmake --preset=clang-coverage

      - name: build
        run: cmake --build --parallel 4 --preset=clang-coverage

      - name: test
        run: ctest --preset=clang-coverage --output-junit test-results.xml

      - name: generate coverage report
        run: GCOV="llvm-cov gcov" gcovr --xml --output build/clang-coverage/coverage.xml

      - name: upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: build/clang-coverage/coverage.xml,build/clang-coverage/test-results.xml
          fail_ci_if_error: true
